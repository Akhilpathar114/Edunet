# -*- coding: utf-8 -*-
"""Akhil_Logistic_Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FhEu9Tyr1uRa9uBLUPLQKg81yvv3k83g
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import seaborn as sns
import matplotlib.pyplot as plt

data = pd.read_csv('green_tech_data.csv')
print(data.head())
print(data.isnull().sum())

X=data[['carbon_emissions','energy_output','renewability_index','cost_efficiency',]]
y=data['sustainability']

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

model=LogisticRegression()
model.fit(X_train,y_train)

LogisticRegression()

y_pred=model.predict(X_test)

y_pred

accuracy=accuracy_score(y_test,y_pred)
print(accuracy)

conf_matrix=confusion_matrix(y_test,y_pred)
sns.heatmap(conf_matrix,annot=True,fmt='d',cmap='Blues',xticklabels=['Not Sustainably','Sustainably'],yticklabels=['Not Sustainably','Sustainably'])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

# Classification Report
print(classification_report(y_test, y_pred, target_names=['Not Sustainable', 'Sustainable']))
# Feature importance
coefficients = pd.DataFrame(model.coef_.T, index=X.columns, columns=['Coefficient'])
print(coefficients)

TP=6
FP=3

TN=3
FN=3

PRECESION=(TP/(TP+FP))*100
print(PRECESION)

RECALL=(TP/(TP+FN))*100
print(RECALL)